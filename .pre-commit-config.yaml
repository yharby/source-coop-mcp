# Pre-commit hooks for Source Cooperative MCP Server
# See https://pre-commit.com for more information
#
# Install: uv run pre-commit install
# Update: uv run pre-commit autoupdate
# Run manually: uv run pre-commit run --all-files

repos:
  # Ruff - Fast Python linter and formatter (replaces flake8, black, isort, etc.)
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.14.1
    hooks:
      - id: ruff
        args: [--fix]  # Removed --exit-non-zero-on-fix for CI compatibility
        name: ruff linter
      - id: ruff-format
        name: ruff formatter

  # General pre-commit hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v6.0.0
    hooks:
      # Git safety
      - id: no-commit-to-branch
        args: [--branch, main, --branch, master]
        name: prevent commits to main/master
      - id: check-merge-conflict
        name: check for merge conflicts

      # File format checks
      - id: check-yaml
        name: check yaml syntax
        args: [--allow-multiple-documents]
      - id: check-toml
        name: check toml syntax
      - id: check-json
        name: check json syntax

      # File hygiene
      - id: end-of-file-fixer
        name: fix end of files
        exclude: '\.json$'
      - id: trailing-whitespace
        name: trim trailing whitespace
        args: [--markdown-linebreak-ext=md]
      - id: mixed-line-ending
        name: fix mixed line endings
        args: [--fix=lf]

      # Security and safety
      - id: detect-private-key
        name: detect private keys
      - id: check-added-large-files
        name: check for large files
        args: [--maxkb=1000]

      # Python-specific
      - id: check-ast
        name: check python ast
      - id: check-builtin-literals
        name: check builtin literals
      - id: debug-statements
        name: check for debug statements

      # Cross-platform compatibility
      - id: check-case-conflict
        name: check for case conflicts

  # Additional modern hooks
  - repo: https://github.com/python-jsonschema/check-jsonschema
    rev: 0.30.0
    hooks:
      - id: check-github-workflows
        name: validate github workflows
        args: [--verbose]

# Configuration
default_install_hook_types: [pre-commit, commit-msg]
default_stages: [pre-commit]

# Performance optimization
fail_fast: false
minimum_pre_commit_version: '3.0.0'
